name: Setup AWS OIDC and IAM Role

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

env:
  AWS_ACCOUNT_ID: "123456789012"               # ← 본인 AWS 계정 ID
  REPO_NAME: "davidkims/my-repo"               # ← 본인 GitHub 저장소 경로 (ORG/REPO)
  ROLE_NAME: "github-actions-oidc-role"
  IAM_USER_NAME: "github-deploy-user"
  AWS_REGION: "ap-northeast-2"

jobs:
  setup-oidc-role:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install AWS CLI and jq
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        python3 -m pip install --upgrade pip
        pip install awscli

    - name: Configure AWS OIDC credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.ROLE_NAME }}
        aws-region: ${{ env.AWS_REGION }}
        audience: sts.amazonaws.com
      continue-on-error: true

    - name: Generate and run OIDC setup script
      run: |
        cat <<EOF > setup-aws-oidc.sh
        #!/bin/bash

        AWS_ACCOUNT_ID="${{ env.AWS_ACCOUNT_ID }}"
        REPO_NAME="${{ env.REPO_NAME }}"
        ROLE_NAME="${{ env.ROLE_NAME }}"
        IAM_USER_NAME="${{ env.IAM_USER_NAME }}"
        REGION="${{ env.AWS_REGION }}"

        echo "📌 [1/3] OIDC 공급자 존재 여부 확인 및 생성"
        OIDC_EXISTS=\$(aws iam list-open-id-connect-providers | grep token.actions.githubusercontent.com || true)

        if [ -z "\$OIDC_EXISTS" ]; then
          aws iam create-open-id-connect-provider \\
            --url https://token.actions.githubusercontent.com \\
            --client-id-list sts.amazonaws.com \\
            --thumbprint-list "6938fd4d98bab03faadb97b34396831e3780aea1"
          echo "✅ OIDC 공급자 생성 완료"
        else
          echo "✅ OIDC 공급자 이미 존재함"
        fi

        echo "📌 [2/3] IAM 역할 생성 (OIDC 인증용)"
        aws iam create-role --role-name "\$ROLE_NAME" --assume-role-policy-document "{
          \\"Version\\": \\"2012-10-17\\",
          \\"Statement\\": [{
            \\"Effect\\": \\"Allow\\",
            \\"Principal\\": {
              \\"Federated\\": \\"arn:aws:iam::\$AWS_ACCOUNT_ID:oidc-provider/token.actions.githubusercontent.com\\"
            },
            \\"Action\\": \\"sts:AssumeRoleWithWebIdentity\\",
            \\"Condition\\": {
              \\"StringLike\\": {
                \\"token.actions.githubusercontent.com:sub\\": \\"repo:\$REPO_NAME:*\\"
              },
              \\"StringEquals\\": {
                \\"token.actions.githubusercontent.com:aud\\": \\"sts.amazonaws.com\\"
              }
            }
          }]
        }" || echo "ℹ️ 역할 이미 존재함. 건너뜁니다."

        echo "📌 [3/3] 역할에 정책 부여 (IAM 키 생성 권한)"
        aws iam put-role-policy --role-name "\$ROLE_NAME" --policy-name allow-access-key --policy-document "{
          \\"Version\\": \\"2012-10-17\\",
          \\"Statement\\": [{
            \\"Effect\\": \\"Allow\\",
            \\"Action\\": [
              \\"iam:CreateAccessKey\\",
              \\"iam:ListAccessKeys\\",
              \\"iam:GetUser\\",
              \\"iam:DeleteAccessKey\\"
            ],
            \\"Resource\\": \\"arn:aws:iam::\$AWS_ACCOUNT_ID:user/\$IAM_USER_NAME\\"
          }]
        }"

        echo "✅ 모든 설정 완료 (OIDC + 역할 + 정책)"
        EOF

        chmod +x setup-aws-oidc.sh
        ./setup-aws-oidc.sh
