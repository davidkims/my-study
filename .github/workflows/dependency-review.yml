name: Security Monitoring Snapshot

on:
  schedule:
    - cron: '0 * * * *'  # Îß§ ÏãúÍ∞Ñ Ï†ïÍ∞ÅÏóê Ïã§Ìñâ
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  security-check:
    name: Dependency & Vulnerability Snapshot
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare snapshot directory
        id: snapshot
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          SNAPSHOT_DIR=".security-snapshots/slot-${TIMESTAMP}"
          mkdir -p "$SNAPSHOT_DIR"
          echo "SNAPSHOT_DIR=$SNAPSHOT_DIR" >> $GITHUB_ENV
          echo "üì∏ Snapshot path: $SNAPSHOT_DIR"

      - name: Dependency Review (Auto-Scan Mode)
        id: depcheck
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: never
          fail-on-severity: moderate
        continue-on-error: true

      - name: Save snapshot if vulnerabilities detected
        if: steps.depcheck.outcome == 'failure'
        run: |
          echo "üö® Vulnerabilities detected during dependency scan."
          echo "Saving snapshot report..."
          echo "Time: $(date)" > "${SNAPSHOT_DIR}/report.txt"
          echo "Workflow: Dependency Review" >> "${SNAPSHOT_DIR}/report.txt"
          echo "Severity: Moderate or higher" >> "${SNAPSHOT_DIR}/report.txt"
          echo "Commit: $GITHUB_SHA" >> "${SNAPSHOT_DIR}/report.txt"
          echo "URL: https://github.com/${{ github.repository }}/commit/${GITHUB_SHA}" >> "${SNAPSHOT_DIR}/report.txt"
          echo "Snapshot stored at ${SNAPSHOT_DIR}"
          tree .security-snapshots || true

      - name: Print Summary
        run: |
          echo "üîç Dependency Review Result: ${{ steps.depcheck.outcome }}"
          if [ "${{ steps.depcheck.outcome }}" == "failure" ]; then
            echo "‚ùó Issues found. See snapshot under: $SNAPSHOT_DIR"
          else
            echo "‚úÖ No vulnerabilities found."
          fi
