name: OSV Scanner Snapshot via Go Build

on:
  schedule:
    - cron: '0 * * * *'  # ë§¤ ì‹œê°„ ì‹¤í–‰
  workflow_dispatch:

permissions:
  contents: read

jobs:
  osv-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Snapshot Directory
        id: snapshot
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          SNAPSHOT_DIR=".security-snapshots/slot-${TIMESTAMP}"
          mkdir -p "$SNAPSHOT_DIR"
          echo "SNAPSHOT_DIR=$SNAPSHOT_DIR" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install OSV Scanner (Build from Source)
        run: |
          go install github.com/google/osv-scanner/cmd/osv-scanner@latest
          echo "âœ… Installed OSV Scanner: $(which osv-scanner)"
          osv-scanner --version

      - name: Scan Python dependencies
        continue-on-error: true
        run: |
          if [ -f requirements.txt ]; then
            osv-scanner --lockfile=requirements.txt > "${SNAPSHOT_DIR}/osv-python.txt"
          fi

      - name: Scan Java dependencies
        continue-on-error: true
        run: |
          if [ -f pom.xml ]; then
            osv-scanner --lockfile=pom.xml > "${SNAPSHOT_DIR}/osv-java.txt"
          fi

      - name: Scan Node.js dependencies
        continue-on-error: true
        run: |
          if [ -f package-lock.json ]; then
            osv-scanner --lockfile=package-lock.json > "${SNAPSHOT_DIR}/osv-node.txt"
          fi

      - name: Print Summary
        run: |
          echo "ðŸ“‹ Scan Summary:"
          for file in ${SNAPSHOT_DIR}/*.txt; do
            echo "--- $file ---"
            head -n 10 "$file"
          done

      - name: Show Snapshot Tree
        run: |
          tree .security-snapshots || echo "No snapshot tree available"
