name: Secure CI - Auto Checkmarx Token + Slot Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  actions: write
  security-events: write

jobs:
  checkmarx-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set Disk Slot Timestamp
      run: |
        TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
        echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
        echo "SLOT_DIR=disk-slot/slot-${TIMESTAMP}" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq curl unzip file openjdk-17-jdk

    - name: Create Slot Directories
      run: |
        mkdir -p $SLOT_DIR/reports/checkmarx

    - name: 🔐 Get Checkmarx Access Token Automatically
      id: cx-auth
      run: |
        echo "🔑 Requesting Checkmarx Access Token..."
        TOKEN_RES=$(curl -s -X POST "https://ast.checkmarx.net/auth/realms/checkmarx/protocol/openid-connect/token" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "client_id=${{ secrets.CX_CLIENT_ID }}" \
          -d "client_secret=${{ secrets.CX_CLIENT_SECRET }}" \
          -d "grant_type=client_credentials")

        ACCESS_TOKEN=$(echo "$TOKEN_RES" | jq -r '.access_token')

        if [[ "$ACCESS_TOKEN" == "null" || -z "$ACCESS_TOKEN" ]]; then
          echo "❌ Failed to retrieve Checkmarx access token"
          echo "$TOKEN_RES"
          exit 1
        fi

        echo "::add-mask::$ACCESS_TOKEN"
        echo "CHECKMARX_ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

    - name: ✅ Run Checkmarx Scan via CLI with Access Token
      run: |
        curl -sLO https://downloads.checkmarx.com/cli/latest/Checkmarx-CLI.zip
        unzip Checkmarx-CLI.zip -d cxcli && chmod +x cxcli/cx
        ./cxcli/cx scan create \
          --project-name "${{ github.repository }}" \
          --branch-name main \
          --base-uri https://ast.checkmarx.net \
          --tenant ${{ secrets.CX_TENANT }} \
          --access-token "$CHECKMARX_ACCESS_TOKEN" \
          --report-format sarif \
          --output-path $SLOT_DIR/reports/checkmarx

    - name: Upload SARIF Report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ env.SLOT_DIR }}/reports/checkmarx/cx_result.sarif
