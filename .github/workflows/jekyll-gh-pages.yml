name: Deploy Jekyll and PostgreSQL Check

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Install Python and psycopg2
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip libpq-dev
          pip3 install psycopg2-binary

      - name: Create Python DB script
        run: |
          echo 'import psycopg2
try:
    conn = psycopg2.connect(
        dbname="mydb",
        user="postgres",
        password="postgres",
        host="127.0.0.1",
        port=5432
    )
    cur = conn.cursor()
    cur.execute("SELECT version();")
    print("✅ PostgreSQL 연결 성공:", cur.fetchone()[0])
except Exception as e:
    print("❌ PostgreSQL 연결 실패:", e)
' > check_postgres.py

      - name: Run PostgreSQL DB connection script
        run: python3 check_postgres.py

      - name: Generate index.md
        run: |
          echo '---
layout: default
title: PostgreSQL 테스트
---

# GitHub Actions + Jekyll + PostgreSQL

- DB 연결 확인 결과는 위 단계에서 출력됩니다.
- 이 페이지는 GitHub Pages로 자동 배포됩니다.
' > index.md

      - name: Generate _config.yml
        run: |
          echo "title: PostgreSQL 연결 확인\ninclude:\n  - index.md" > _config.yml

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload GitHub Pages Artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
